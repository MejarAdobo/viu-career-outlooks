name: Main Branch Protection

on:
  pull_request:
    branches: [main]

jobs:
  validate:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Run tests
        run: npm test

      - name: Check PR approvals
        uses: actions/github-script@v6
        with:
          script: |
            const pullRequest = context.payload.pull_request;
            const { data: reviews } = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pullRequest.number,
            });
            
            // Find approved reviews that haven't been dismissed
            const approvals = reviews.filter(review => 
              review.state === 'APPROVED' && 
              !reviews.some(r => 
                r.id > review.id && 
                r.user.id === review.user.id && 
                r.state !== 'APPROVED'
              )
            );
            
            const uniqueApprovers = [...new Set(approvals.map(review => review.user.login))];
            
            if (uniqueApprovers.length < 1) {
              core.setFailed('At least 1 approval is required to merge to main');
            } else {
              console.log(`PR has been approved by ${uniqueApprovers.length} reviewer(s): ${uniqueApprovers.join(', ')}`);
            }

  deploy:
    needs: validate
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build for production
        run: |
          # Add your build steps here
          echo "Building for production..."
          npm run build

      - name: Deploy to production
        run: |
          # Add your deployment steps here
          echo "Deploying to production..."
